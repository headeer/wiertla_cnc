{% comment %}
  Wiertla Categories Component
  A component to display product categories and search functionality for the Wiertla CNC Shopify theme.
{% endcomment %}

{% assign section_id = section.id %}
{% assign items_per_page = section.settings.items_per_page | default: 20 %}

{% if section.settings.selected_collection != blank %}
  {% assign selected_collection = collections[section.settings.selected_collection] %}
{% else %}
  {% assign selected_collection = collections.all %}
{% endif %}

{% assign current_language = request.locale.iso_code | default: 'pl' %}

{% paginate selected_collection.products by 2000 %}
<div class="wiertla-categories">
  <div class="wiertla-categories__container">
    <!-- Mobile Icons -->
    <div class="wiertla-categories__mobile-icons">
      <div class="wiertla-categories__icon-item">
        <img src="{{ 'ico_koronkowe.svg' | asset_url }}" alt="Koronkowe" width="24" height="24">
        <span>Koronkowe</span>
      </div>
      <div class="wiertla-categories__icon-item">
        <img src="{{ 'ico_plytkowe.svg' | asset_url }}" alt="Płytkowe" width="24" height="24">
        <span>Płytkowe</span>
      </div>
      <div class="wiertla-categories__icon-item">
        <img src="{{ 'ico_vhm.svg' | asset_url }}" alt="VHM" width="24" height="24">
        <span>VHM</span>
      </div>
      <div class="wiertla-categories__icon-item">
        <img src="{{ 'ico_sandvik.svg' | asset_url }}" alt="Sandvik" width="24" height="24">
        <span>Sandvik</span>
      </div>
    </div>


    <!-- Status Filters and Category Tabs in Background -->
     <div class="wiertla-categories__tabs">
          <button class="wiertla-categories__tab active">PŁYTKI DO WIERTEŁ</button>
          <button class="wiertla-categories__tab">KORONKI DO WIERTEŁ</button>
          <button class="wiertla-categories__tab">REGENERACJA KORONEK KSEM</button>
        </div>
    <div class="wiertla-categories__filters-background">
      <div class="wiertla-categories__filters-container">
        <!-- New Category Tabs -->
       
        
        <!-- New Status Filters -->
        <div class="wiertla-categories__status-filters">
          <button class="wiertla-categories__status-filter active">Nowe</button>
          <button class="wiertla-categories__status-filter">Używane</button>
        </div>
        
        <!-- Include Category Filters Component -->
        {% render 'wiertla-categories-filters' %}
      </div>
    </div>

    <div class="wiertla-categories__content wiertla-categories__layout">
      <!-- Left Column -->
      <div class="wiertla-categories__left-column">
        <!-- Include Search Component -->
        {% render 'wiertla-categories-search' %}
      </div>

      <!-- Right Column -->
      <div class="wiertla-categories__right-column">
        <!-- Include Table Component -->
        {% render 'wiertla-categories-table' %}

      </div>
    </div>
  </div>
</div>

<!-- Include Mobile Components -->
{% render 'wiertla-categories-mobile' %}

<!-- Include Fullscreen Component -->
{% render 'wiertla-categories-fullscreen' %}

<!-- Include scripts directly -->
<script>
  // Get products from selected collection
  var wiertlaProducts = [
    {% for product in selected_collection.products %}
      {
        id: {{ product.id | json }},
        title: {{ product.title | json }},
        url: {{ product.url | json }},
        type: {{ product.type | json }},
        vendor: {{ product.vendor | json }},
        price: {{ product.price | money_without_trailing_zeros | json }},
        available: {{ product.available | json }},
        fi: {{ product.metafields.custom.diameter.value | json }},
        length: {{ product.metafields.custom.length.value | json }},
        symbol: {{ product.metafields.custom.symbol.value | json }},
        rentable: {{ product.metafields.custom.rentable.value | json }},
        image: {{ product.featured_image | img_url: '100x' | json }},
        large_image: {{ product.featured_image | img_url: '425x' | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];

  console.log('Script loading - products loaded:', wiertlaProducts.length);
  if (wiertlaProducts.length > 0) {
    console.log('First product:', wiertlaProducts[0]);
  }

  document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded - initializing table and preview functionality');
    
    // Debug - check if elements exist
    console.log('Table body exists:', !!document.getElementById('productsTableBody'));
    
    // Initialize product table data
    let allProducts = wiertlaProducts;
    
    // Create hover preview element
    const hoverPreview = document.createElement('div');
    hoverPreview.className = 'wiertla-categories__hover-preview';
    hoverPreview.innerHTML = `
      <div class="wiertla-categories__hover-preview-inner">
        <img src="" alt="Preview" class="wiertla-categories__hover-preview-img">
        <div class="wiertla-categories__hover-preview-arrow"></div>
      </div>
    `;
    document.body.appendChild(hoverPreview);
    
    // Set search input placeholder
    const searchInput = document.querySelector('.wiertla-search__input');
    if (searchInput) {
      searchInput.placeholder = "fi / nazwa / symbol / producent";
      console.log('Search input found and placeholder set');
    } else {
      console.error('Search input not found');
    }
    
    // Initialize variables
    let currentPage = 1;
    let itemsPerPage = {{ section.settings.items_per_page | default: 20 }};
    let totalPages = 1;
    let selectedCategory = 'wszystkie';
    let currentFilters = {
      type: '',
      crown: '',
      manufacturer: '',
      search: ''
    };

    // Detect Shopify language from the html lang attribute
    let shopifyLanguage = document.documentElement.lang || 'pl';
    
    // Initialize translations based on Shopify language
    const translations = {
      'pl': {
        'no_results': 'Brak wyników spełniających kryteria',
        'results_format': '{0}-{1} z {2}',
        'show_previous': 'POKAŻ POPRZEDNIE',
        'show_next': 'POKAŻ NASTĘPNE',
        'preview_title': 'ZOBACZ OBRAZ POGLĄDOWY',
        'preview_instruction': 'Najedź kursorem na wiertło w tabeli, aby wyświetlić tu powiększony podgląd',
        'fullscreen_title': 'WIERTŁA CNC',
        'fullscreen_description': 'Wybierz interesujące Cię wiertło z bogatej oferty naszego sklepu.',
        'close_fullscreen': 'ZAMKNIJ PEŁEN EKRAN'
      },
      'en': {
        'no_results': 'No results match your criteria',
        'results_format': '{0}-{1} of {2}',
        'show_previous': 'SHOW PREVIOUS',
        'show_next': 'SHOW NEXT',
        'preview_title': 'VIEW PREVIEW IMAGE',
        'preview_instruction': 'Hover over a drill in the table to display an enlarged preview here',
        'fullscreen_title': 'CNC DRILLS',
        'fullscreen_description': 'Choose the drill you are interested in from our store\'s extensive selection.',
        'close_fullscreen': 'CLOSE FULLSCREEN'
      },
      'de': {
        'no_results': 'Keine Ergebnisse entsprechen Ihren Kriterien',
        'results_format': '{0}-{1} von {2}',
        'show_previous': 'VORHERIGE ANZEIGEN',
        'show_next': 'NÄCHSTE ANZEIGEN',
        'preview_title': 'VORSCHAUBILD ANZEIGEN',
        'preview_instruction': 'Fahren Sie mit dem Mauszeiger über einen Bohrer in der Tabelle, um hier eine vergrößerte Vorschau anzuzeigen',
        'fullscreen_title': 'CNC-BOHRER',
        'fullscreen_description': 'Wählen Sie den gewünschten Bohrer aus unserem umfangreichen Sortiment.',
        'close_fullscreen': 'VOLLBILD SCHLIESSEN'
      }
    };
    
    // Default to Polish if language not supported
    let currentLanguage = translations[shopifyLanguage] ? shopifyLanguage : 'pl';
    
    // Watch for language changes in the Shopify language selector
    document.addEventListener('click', function(e) {
      // Look for Shopify language selector links
      const langLink = e.target.closest('.header__lang-links a, [data-disclosure-locale]');
      if (langLink) {
        // We don't need to handle the click, just note that language will change
        // The page will reload with the new language
        console.log('Language change detected');
      }
    });

    // Make necessary functions globally available
    window.handleCategoryChange = function(category) {
      console.log('Global handleCategoryChange called with:', category);
      selectedCategory = category;
      currentPage = 1;
      applyFilters();
    };
    
    window.handleItemsPerPageChange = function(newItemsPerPage) {
      console.log('Global handleItemsPerPageChange called with:', newItemsPerPage);
      itemsPerPage = parseInt(newItemsPerPage);
      currentPage = 1;
      applyFilters();
    };

    // Calculate initial totalPages
    totalPages = Math.ceil(allProducts.length / itemsPerPage);
    console.log('Initial setup - Total pages:', totalPages);
    
    // Generate table HTML
    function generateTable(products) {
      const tableBody = document.getElementById('productsTableBody');
      if (!tableBody) {
        console.error('Table body element not found!');
        return;
      }
      
      tableBody.innerHTML = '';
      
      console.log('Generating table with products:', products.length);
      
      if (products.length === 0) {
        const noResultsRow = document.createElement('tr');
        noResultsRow.innerHTML = `<td colspan="7" style="text-align: center; padding: 20px;">${translations[currentLanguage].no_results}</td>`;
        tableBody.appendChild(noResultsRow);
        return;
      }
      
      products.forEach(product => {
        const row = document.createElement('tr');
        row.className = 'wiertla-categories__table-row';
        row.setAttribute('data-product-id', product.id);
        row.setAttribute('data-href', product.url);
        
        row.innerHTML = `
          <td>${product.type || '-'}</td>
          <td>${product.fi || '-'}</td>
          <td>${product.length || '-'}</td>
          <td>${product.symbol || '-'}</td>
          <td>${product.vendor || '-'}</td>
          <td>${product.price}</td>
        `;
        
        if (product.image) {
          row.setAttribute('data-image', product.large_image);
          
          row.addEventListener('mouseenter', function(e) {
            const image = this.getAttribute('data-image');
            const imageElement = hoverPreview.querySelector('img');
            imageElement.src = image;
            
            // Force display before adding active class to ensure proper positioning
            hoverPreview.style.display = 'block';
            hoverPreview.style.opacity = '0';
            
            // Update position first
            updatePreviewPosition(e);
            
            // Then make visible
            setTimeout(() => {
              hoverPreview.classList.add('active');
              hoverPreview.style.opacity = '1';
            }, 10);
            
            // Update the table preview image
            const tablePreviewImg = document.querySelector('.wiertla-categories__table-preview img');
            if (tablePreviewImg) {
              tablePreviewImg.src = image;
            }
          });
          
          row.addEventListener('mousemove', updatePreviewPosition);
          
          row.addEventListener('mouseleave', function() {
            hoverPreview.classList.remove('active');
            hoverPreview.style.opacity = '0';
            setTimeout(() => {
              if (!hoverPreview.classList.contains('active')) {
                hoverPreview.style.display = 'none';
              }
            }, 300);
            
            // Reset table preview to default
            const tablePreviewImg = document.querySelector('.wiertla-categories__table-preview img');
            if (tablePreviewImg) {
              tablePreviewImg.src = "{{ 'custom_icons.png' | asset_url }}";
            }
          });
        }
        
        // Make entire row clickable
        row.addEventListener('click', function() {
          const url = this.getAttribute('data-href');
          if (url) {
            window.location.href = url;
          }
        });
        
        tableBody.appendChild(row);
      });
      
      // Update result count
      const resultsCount = document.getElementById('resultsCount');
      if (resultsCount) {
        const startIndex = (currentPage - 1) * itemsPerPage + 1;
        const endIndex = Math.min(startIndex + products.length - 1, allProducts.length);
        const format = translations[currentLanguage].results_format;
        resultsCount.textContent = format.replace('{0}', startIndex).replace('{1}', endIndex).replace('{2}', allProducts.length);
      } else {
        console.error('Results count element not found');
      }
    }
    
    // Update hover preview position
    function updatePreviewPosition(e) {
      const previewWidth = hoverPreview.offsetWidth;
      const previewHeight = hoverPreview.offsetHeight;
      
      // Get the position of the table row being hovered
      const tableRow = e.currentTarget;
      const tableRowRect = tableRow.getBoundingClientRect();
      
      // Position the preview to the left of the table row, aligned with the row's vertical center
      let top = tableRowRect.top + window.scrollY - (previewHeight / 2) + (tableRowRect.height / 2);
      
      // Make sure preview stays in viewport vertically
      if (top < window.scrollY) {
        top = window.scrollY + 10;
      } else if (top + previewHeight > window.scrollY + window.innerHeight) {
        top = window.scrollY + window.innerHeight - previewHeight - 10;
      }
      
      // Position horizontally to the left of the table
      const tableContainer = document.querySelector('.wiertla-categories__table-container');
      const tableContainerRect = tableContainer.getBoundingClientRect();
      const left = tableContainerRect.left + window.scrollX - previewWidth - 20;
      
      hoverPreview.style.left = left + 'px';
      hoverPreview.style.top = top + 'px';
      
      // Ensure the element is visible
      if (hoverPreview.classList.contains('active')) {
        hoverPreview.style.display = 'block';
      }
    }
    
    // Filter products based on current filters
    function filterProducts() {
      return allProducts.filter(product => {
        // Filter by category
        if (selectedCategory !== 'wszystkie') {
          if (selectedCategory === 'koronkowe' && product.type !== 'VW') return false;
          if (selectedCategory === 'plytkowe' && product.type !== 'PR') return false;
          if (selectedCategory === 'vhm' && product.type !== 'WW') return false;
          if (selectedCategory === 'sandvik' && product.type !== 'PS') return false;
          if (selectedCategory === 'amec' && product.type !== 'WV') return false;
          if (selectedCategory === 'ksem' && product.type !== 'WK') return false;
        }
        
        // Filter by type
        if (currentFilters.type && product.type !== currentFilters.type) return false;
        
        // Filter by crown
        if (currentFilters.crown && (!product.symbol || !product.symbol.includes(currentFilters.crown))) return false;
        
        // Filter by manufacturer
        if (currentFilters.manufacturer && product.vendor !== currentFilters.manufacturer) return false;
        
        // Filter by search
        if (currentFilters.search) {
          const searchTerm = currentFilters.search.toLowerCase();
          const title = (product.title || '').toLowerCase();
          const symbol = (product.symbol || '').toLowerCase();
          const vendor = (product.vendor || '').toLowerCase();
          const fi = String(product.fi || '').toLowerCase();
          
          if (!title.includes(searchTerm) && 
              !symbol.includes(searchTerm) && 
              !vendor.includes(searchTerm) &&
              !fi.includes(searchTerm)) {
            return false;
          }
        }
        
        return true;
      });
    }
    
    // Apply filters and pagination
    function applyFilters() {
      const filteredProducts = filterProducts();
      totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
      
      if (currentPage > totalPages) {
        currentPage = totalPages > 0 ? totalPages : 1;
      }
      
      const startIndex = (currentPage - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;
      const productsToShow = filteredProducts.slice(startIndex, endIndex);
      
      generateTable(productsToShow);
      updatePaginationButtons();
      
      // If fullscreen is active, update it too
      const fullscreenMode = document.querySelector('.wiertla-categories__fullscreen-mode');
      if (fullscreenMode && fullscreenMode.classList.contains('active')) {
        applyFullscreenFilters();
      }
      
      console.log('Applied filters - Products to show:', productsToShow.length);
    }
    
    // Update pagination button states
    function updatePaginationButtons() {
      const prevButton = document.getElementById('prevPage');
      const nextButton = document.getElementById('nextPage');
      
      if (prevButton) {
        prevButton.disabled = currentPage <= 1;
      } else {
        console.error('Previous button not found');
      }
      
      if (nextButton) {
        nextButton.disabled = currentPage >= totalPages;
      } else {
        console.error('Next button not found');
      }
    }
    
    // Handle pagination button clicks
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    
    if (prevButton) {
      prevButton.addEventListener('click', function() {
        if (currentPage > 1) {
          currentPage--;
          applyFilters();
        }
      });
    }
    
    if (nextButton) {
      nextButton.addEventListener('click', function() {
        if (currentPage < totalPages) {
          currentPage++;
          applyFilters();
        }
      });
    }
    
    // Handle search input
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        currentFilters.search = this.value.trim();
        currentPage = 1;
        applyFilters();
      });
    }
    
    // Handle fullscreen button
    const fullscreenBtn = document.querySelector('.wiertla-categories__fullscreen-btn');
    const fullscreenMode = document.querySelector('.wiertla-categories__fullscreen-mode');
    const fullscreenClose = document.querySelector('.wiertla-categories__fullscreen-close');
    const fullscreenContent = document.querySelector('.wiertla-categories__fullscreen-content');
    
    if (fullscreenBtn && fullscreenMode && fullscreenContent) {
      fullscreenBtn.addEventListener('click', function() {
        // Add fullscreen header with proper translation elements
        const fullscreenHeader = document.createElement('div');
        fullscreenHeader.className = 'wiertla-categories__fullscreen-header';
        
        fullscreenHeader.innerHTML = `
          <div class="wiertla-categories__fullscreen-title">
            <h2>${translations[currentLanguage].fullscreen_title}</h2>
            <p>${translations[currentLanguage].fullscreen_description}</p>
          </div>
          <button class="wiertla-categories__fullscreen-close">
            <img src="{{ 'ico_close.svg' | asset_url }}" alt="Close" width="24" height="24">
            <span>${translations[currentLanguage].close_fullscreen}</span>
          </button>
        `;
        
        // Replace existing fullscreen content
        fullscreenMode.innerHTML = '';
        fullscreenMode.appendChild(fullscreenHeader);
        
        // Create container for the content
        const fullscreenContainer = document.createElement('div');
        fullscreenContainer.className = 'wiertla-categories__fullscreen-container';
        fullscreenMode.appendChild(fullscreenContainer);

        // Clone filters and table
        const filters = document.querySelector('.wiertla-categories__filters').cloneNode(true);
        const tableContainer = document.querySelector('.wiertla-categories__table-container').cloneNode(true);
        const resultsContainer = document.querySelector('.wiertla-categories__results').cloneNode(true);

        // Update IDs in cloned content to avoid duplicates
        const newTableBody = tableContainer.querySelector('#productsTableBody');
        if (newTableBody) {
          newTableBody.id = 'fullscreenProductsTableBody';
        }

        const newResultsCount = resultsContainer.querySelector('#resultsCount');
        if (newResultsCount) {
          newResultsCount.id = 'fullscreenResultsCount';
        }

        const newPrevButton = resultsContainer.querySelector('#prevPage');
        if (newPrevButton) {
          newPrevButton.id = 'fullscreenPrevPage';
          // Set translation text
          newPrevButton.setAttribute('data-text', translations[currentLanguage].show_previous);
        }

        const newNextButton = resultsContainer.querySelector('#nextPage');
        if (newNextButton) {
          newNextButton.id = 'fullscreenNextPage';
          // Set translation text
          newNextButton.setAttribute('data-text', translations[currentLanguage].show_next);
        }

        // Create fullscreen layout
        const fullscreenLayout = document.createElement('div');
        fullscreenLayout.className = 'wiertla-categories__fullscreen-layout';

        // Create left and right columns
        const leftColumn = document.createElement('div');
        leftColumn.className = 'wiertla-categories__fullscreen-left';

        const rightColumn = document.createElement('div');
        rightColumn.className = 'wiertla-categories__fullscreen-right';

        // Add preview component to left column
        leftColumn.innerHTML = `
          <h3 class="wiertla-categories__preview-title">${translations[currentLanguage].preview_title}</h3>
          <div class="wiertla-categories__preview-image">
            <img src="{{ 'custom_icons.png' | asset_url }}" alt="Preview" class="wiertla-categories__preview-img">
          </div>
          <p class="wiertla-categories__preview-text">${translations[currentLanguage].preview_instruction}</p>
        `;

        // Add filters and table to right column
        rightColumn.appendChild(filters);
        rightColumn.appendChild(tableContainer);

        // Assemble the layout
        fullscreenLayout.appendChild(leftColumn);
        fullscreenLayout.appendChild(rightColumn);

        // Clear and update fullscreen content
        fullscreenContainer.innerHTML = '';
        fullscreenContainer.appendChild(fullscreenLayout);
        fullscreenContainer.appendChild(resultsContainer);

        // Show fullscreen mode
        fullscreenMode.classList.add('active');
        document.body.style.overflow = 'hidden';

        // Re-apply filters to the cloned table
        applyFullscreenFilters();

        // Add event listeners to cloned elements
        addFullscreenEventListeners();
      });
      
      if (fullscreenClose) {
        fullscreenClose.addEventListener('click', function() {
          fullscreenMode.classList.remove('active');
          document.body.style.overflow = '';
        });
      }
    } else {
      console.error('Fullscreen elements not found:', {
        btn: !!fullscreenBtn,
        mode: !!fullscreenMode,
        content: !!fullscreenContent
      });
    }
    
    function applyFullscreenFilters() {
      const filteredProducts = filterProducts();
      const startIndex = (currentPage - 1) * itemsPerPage;
      const endIndex = startIndex + itemsPerPage;
      const productsToShow = filteredProducts.slice(startIndex, endIndex);
      
      const tableBody = document.getElementById('fullscreenProductsTableBody');
      if (!tableBody) {
        console.error('Fullscreen table body element not found!');
        return;
      }
      
      tableBody.innerHTML = '';
      
      if (productsToShow.length === 0) {
        const noResultsRow = document.createElement('tr');
        noResultsRow.innerHTML = `<td colspan="7" style="text-align: center; padding: 20px;">${translations[currentLanguage].no_results}</td>`;
        tableBody.appendChild(noResultsRow);
        return;
      }
      
      productsToShow.forEach(product => {
        const row = document.createElement('tr');
        row.className = 'wiertla-categories__table-row';
        row.setAttribute('data-product-id', product.id);
        
        row.innerHTML = `
          <td>${product.type || '-'}</td>
          <td>${product.fi || '-'}</td>
          <td>${product.length || '-'}</td>
          <td>${product.symbol || '-'}</td>
          <td>${product.vendor || '-'}</td>
          <td>${product.price}</td>
        `;
        
        if (product.image) {
          row.setAttribute('data-image', product.large_image);
          
          // Using mouseover for fullscreen mode to avoid conflicts
          row.addEventListener('mouseover', function() {
            const image = this.getAttribute('data-image');
            const imageElement = document.querySelector('.wiertla-categories__fullscreen-left img');
            if (imageElement) {
              imageElement.src = image;
            }
          });
        }
        
        row.addEventListener('click', function(e) {
          if (e.target.tagName !== 'A' && e.target.tagName !== 'IMG') {
            const link = this.querySelector('.wiertla-categories__product-link');
            if (link) {
              window.location.href = link.getAttribute('href');
            }
          }
        });
        
        tableBody.appendChild(row);
      });
      
      // Update result count in fullscreen mode
      const resultsCount = document.getElementById('fullscreenResultsCount');
      if (resultsCount) {
        const startIndex = (currentPage - 1) * itemsPerPage + 1;
        const endIndex = Math.min(startIndex + productsToShow.length - 1, filteredProducts.length);
        const format = translations[currentLanguage].results_format;
        resultsCount.textContent = format.replace('{0}', startIndex).replace('{1}', endIndex).replace('{2}', filteredProducts.length);
      }
      
      // Update pagination buttons
      const prevButton = document.getElementById('fullscreenPrevPage');
      const nextButton = document.getElementById('fullscreenNextPage');
      
      if (prevButton) {
        prevButton.disabled = currentPage <= 1;
      }
      
      if (nextButton) {
        nextButton.disabled = currentPage >= totalPages;
      }
    }
    
    function addFullscreenEventListeners() {
      // Handle fullscreen pagination
      const prevButton = document.getElementById('fullscreenPrevPage');
      const nextButton = document.getElementById('fullscreenNextPage');
      
      if (prevButton) {
        prevButton.addEventListener('click', function() {
          if (currentPage > 1) {
            currentPage--;
            applyFilters(); // Update main view
            applyFullscreenFilters(); // Update fullscreen view
          }
        });
      }
      
      if (nextButton) {
        nextButton.addEventListener('click', function() {
          if (currentPage < totalPages) {
            currentPage++;
            applyFilters(); // Update main view
            applyFullscreenFilters(); // Update fullscreen view
          }
        });
      }
      
      // Handle fullscreen filters
      const filterSelects = document.querySelectorAll('.wiertla-categories__fullscreen-content .wiertla-categories__filter');
      filterSelects.forEach(select => {
        select.addEventListener('change', function() {
          const filterType = this.getAttribute('data-filter');
          currentFilters[filterType] = this.value;
          currentPage = 1;
          applyFilters(); // Update main view
          applyFullscreenFilters(); // Update fullscreen view
        });
      });
      
      // Handle fullscreen per-page buttons
      const perPageButtons = document.querySelectorAll('.wiertla-categories__fullscreen-content .wiertla-categories__per-page-button');
      perPageButtons.forEach(button => {
        button.addEventListener('click', function() {
          const value = parseInt(this.getAttribute('data-value'));
          
          // Update active button
          perPageButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          
          // Update items per page
          itemsPerPage = value;
          currentPage = 1;
          
          applyFilters(); // Update main view
          applyFullscreenFilters(); // Update fullscreen view
        });
      });
      
      // Handle fullscreen filter buttons
      const filterButtons = document.querySelectorAll('.wiertla-categories__fullscreen-content .wiertla-categories__filter-button');
      filterButtons.forEach(button => {
        button.addEventListener('click', function() {
          const filterType = this.getAttribute('data-filter');
          
          // Update active button
          filterButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          
          // Update selected category
          selectedCategory = filterType;
          currentPage = 1;
          
          applyFilters(); // Update main view
          applyFullscreenFilters(); // Update fullscreen view
        });
      });
    }
    
    // Add event delegation for filter icons
    document.addEventListener('click', function(event) {
      const iconItem = event.target.closest('.wiertla-categories__icon-item');
      if (iconItem) {
        // Remove active class from all icons
        document.querySelectorAll('.wiertla-categories__icon-item').forEach(item => {
          item.classList.remove('active');
        });
        
        // Add active class to clicked icon
        iconItem.classList.add('active');
        
        const category = iconItem.dataset.category;
        console.log('Icon clicked:', category);
        
        // Update selected category and apply filters
        selectedCategory = category;
        currentPage = 1;
        applyFilters();
      }
    });
    
    // Add event delegation for filter buttons and dropdowns
    document.addEventListener('click', function(event) {
      const filterButton = event.target.closest('.wiertla-categories__filter-button');
      if (filterButton) {
        const allFilterButtons = document.querySelectorAll('.wiertla-categories__filter-button');
        allFilterButtons.forEach(btn => btn.classList.remove('active'));
        filterButton.classList.add('active');
        
        selectedCategory = filterButton.getAttribute('data-filter');
        currentPage = 1;
        applyFilters();
      }
      
      const perPageButton = event.target.closest('.wiertla-categories__per-page-button');
      if (perPageButton) {
        const allPerPageButtons = document.querySelectorAll('.wiertla-categories__per-page-button');
        allPerPageButtons.forEach(btn => btn.classList.remove('active'));
        perPageButton.classList.add('active');
        
        itemsPerPage = parseInt(perPageButton.getAttribute('data-value'));
        currentPage = 1;
        applyFilters();
      }
    });
    
    // Add change event listeners for all filter dropdowns
    document.addEventListener('change', function(event) {
      const filterSelect = event.target.closest('.wiertla-categories__filter');
      if (filterSelect) {
        const filterType = filterSelect.getAttribute('data-filter');
        if (filterType) {
          currentFilters[filterType] = filterSelect.value;
          currentPage = 1;
          applyFilters();
        }
      }
    });
    
    // Add dummy product data if none exists
    if (allProducts.length === 0) {
      console.log('No products found, adding dummy data for testing');
      allProducts = [
        {
          id: 1,
          title: "Example Drill Bit",
          url: "#",
          type: "VW",
          vendor: "Sandvik",
          price: "120,00 zł",
          available: true,
          fi: "12",
          length: "85",
          symbol: "VW-12-85",
          rentable: true,
          image: "{{ 'placeholder.png' | asset_url }}",
          large_image: "{{ 'placeholder.png' | asset_url }}"
        },
        {
          id: 2,
          title: "Płytkowy Wiertło",
          url: "#",
          type: "PR",
          vendor: "Komet",
          price: "145,50 zł",
          available: true,
          fi: "8",
          length: "65",
          symbol: "PR-8-65",
          rentable: false,
          image: "{{ 'placeholder.png' | asset_url }}",
          large_image: "{{ 'placeholder.png' | asset_url }}"
        }
      ];
      console.log('Added dummy products:', allProducts.length);
    }
    
    // Move the preview container creation up, before calling applyFilters
    // Create a separate preview container that shows on row hover
    const previewContainer = document.querySelector('.wiertla-categories__preview-image img');
    if (previewContainer) {
      // Set default image
      previewContainer.src = "{{ 'custom_icons.png' | asset_url }}";
      
      // Create a separate preview container that shows on row hover
      const tablePreviewContainer = document.createElement('div');
      tablePreviewContainer.className = 'wiertla-categories__table-preview';
      tablePreviewContainer.innerHTML = `
        <div class="wiertla-categories__preview-image">
          <img src="{{ 'custom_icons.png' | asset_url }}" alt="Preview" class="wiertla-categories__preview-img">
        </div>
      `;
      
      // Append to the left column, after the main preview
      const leftColumn = document.querySelector('.wiertla-categories__left-column');
      if (leftColumn) {
        leftColumn.appendChild(tablePreviewContainer);
      }
    }

    // Initial table population
    console.log('Applying initial filters');
    applyFilters();

    // Set initial active icon
    const initialActiveIcon = document.querySelector(`.wiertla-categories__icon-item[data-category="${selectedCategory}"]`);
    if (initialActiveIcon) {
      // Remove active class from all icons first
      document.querySelectorAll('.wiertla-categories__icon-item').forEach(item => {
        item.classList.remove('active');
      });
      // Add active class to the initial icon
      initialActiveIcon.classList.add('active');
    }

    // Check for stored language preference
    const storedLanguage = localStorage.getItem('shopify_locale');
    if (storedLanguage && translations[storedLanguage]) {
      currentLanguage = storedLanguage;
    }

    // Set pagination buttons text based on language
    document.querySelectorAll('#prevPage, #fullscreenPrevPage').forEach(btn => {
      if (btn) {
        btn.setAttribute('data-text', translations[currentLanguage].show_previous);
      }
    });

    document.querySelectorAll('#nextPage, #fullscreenNextPage').forEach(btn => {
      if (btn) {
        btn.setAttribute('data-text', translations[currentLanguage].show_next);
      }
    });
  });
</script>

{% style %}
.wiertla-categories {
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  padding: 10px;
  font-family: 'Montserrat', sans-serif;
}

.wiertla-categories__container {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
}

/* Language Switcher */
.wiertla-categories__language-switcher {
  display: none;
}

.wiertla-categories__language-btn {
  display: none;
}

/* Icons */
.wiertla-categories__icons {
  display: flex;
  flex-wrap: nowrap;
  gap: 40px;
  margin-bottom: 30px;
  justify-content: center;
  width: 100%;
  background: #F5F5F8;
  padding: 40px 0;
}

.wiertla-categories__icons-container {
  max-width: 1440px;
  width: 100%;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  gap: 40px;
}

.wiertla-categories__icon-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  padding: 20px 15px;
  gap: 15px;
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 10px;
  box-sizing: border-box;
  background: #F5F5F8;
}

.wiertla-categories__icon-item:hover {
  background-color: white;
}

.wiertla-categories__icon-item.active {
  background-color: white;
}

.wiertla-categories__icon-item.active .wiertla-categories__icon-label {
  text-decoration: underline;
  color: #112832;
  font-weight: 700;
}

.wiertla-categories__icon {
  width: 100%;
  height: auto;
  object-fit: cover;
}

.wiertla-categories__icon-label {
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 100%;
  letter-spacing: 6%;
  color: #112832;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
}

/* Mobile Icons */
.wiertla-categories__mobile-icons {
  display: none;
}

@media (max-width: 768px) {
  .wiertla-categories__mobile-icons {
    display: flex;
    justify-content: space-between;
    gap: 10px;
    overflow-x: auto;
    margin-bottom: 20px;
    padding-bottom: 10px;
  }

  .wiertla-categories__icons {
    display: none !important;
  }
}

/* Tabs */
.wiertla-categories__tabs {
  display: flex;
  gap: 10px;
  margin-bottom: 0;
  overflow-x: auto;
}

.wiertla-categories__tab {
  padding: 10px 20px;
  background: white;
  border: 2px solid #E2E2E7;
  border-radius: 0;
  font-family: 'Montserrat', sans-serif;
  font-weight: 600;
  font-size: 12px;
  line-height: 14px;
  color: #112832;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
  border-bottom: none;
}

.wiertla-categories__tab.active {
  background: #F5F5F8;
  color: #5D7077;
  border-color: #E2E2E7;
}

/* Status Filters */
.wiertla-categories__status-filters {
  display: flex;
  gap: 10px;
  margin-bottom: 20px;
}

.wiertla-categories__status-filter {
  height: 42px;
  padding: 10px 22px;
  background: white;
  border: 2px solid #E2E2E7;
  border-radius: 30px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 18px;
  line-height: 100%;
  letter-spacing: 3%;
  color: #112832;
  cursor: pointer;
  text-align: center;
  transition: all 0.3s ease;
}

.wiertla-categories__status-filter.active {
    background: #F5F5F8;
    color: #5D7077;
    border-color: #E2E2E7;
}

/* Layout styles for the two-column structure */
.wiertla-categories__layout {
  display: flex;
  flex-wrap: wrap;
  gap: 40px;
  margin-top: 40px;
}

.wiertla-categories__left-column {
  width: 425px;
  flex-shrink: 0;
}

.wiertla-categories__right-column {
  flex: 1;
  min-width: 0;
}

/* Content and mobile layout styles */
.wiertla-categories__content {
  position: relative;
}

/* Hide mobile elements on desktop */
.wiertla-categories__mobile-icons,
.wiertla-categories__mobile-nav,
.wiertla-categories__mobile-controls,
.wiertla-categories__mobile-filter-modal,
.wiertla-categories__mobile-rent-modal,
.wiertla-categories__scroll-container,
.wiertla-categories__scroll-indicator,
.wiertla-categories__mobile-filter-btn,
.wiertla-categories__mobile-sort-btn,
.wiertla-categories__mobile-per-page {
  display: none !important;
}

.wiertla-categories__tabs {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.wiertla-categories__tab {
  padding: 10px 20px;
  border: 2px solid #E2E2E7;
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 16px;
  line-height: 16px;
  letter-spacing: 0.06em;
  color: #112832;
  cursor: pointer;
  transition: all 0.3s ease;
  border-bottom: none;
}


.wiertla-categories__status-filters {
  display: flex;
  gap: 10px;
  margin-bottom: 30px;
}

.wiertla-categories__status-filter {
  padding: 5px 15px;
  background: transparent;
  border: 1px solid #E2E2E7;
  border-radius: 20px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 14px;
  line-height: 14px;
  color: #445D68;
  cursor: pointer;
  transition: all 0.3s ease;
}


/* Table Styles - fixed row height without truncating content */
.wiertla-categories__table {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  overflow: hidden;
  max-height: 600px;
  overflow-y: auto;
}

.wiertla-categories__table-row {
  min-height: 34px;
  line-height: 34px;
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  background-color: #f5f5f8;
}

.wiertla-categories__table-row:hover {
  background-color: #e5e5ed;
}

.wiertla-categories__table-row:hover::after {
  content: "";
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  background-image: url("{{ 'table_arrow.svg' | asset_url }}");
  background-repeat: no-repeat;
  background-position: center;
  z-index: 5;
}

.wiertla-categories__table td {
  padding: 10px 17px;
  min-height: 34px;
  line-height: normal;
  vertical-align: middle;
  position: relative;
  height: auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 16px;
  line-height: 22px;
  letter-spacing: 3%;
  color: #112832;
  border-right: 2px solid #E2E2E7;
}

.wiertla-categories__table td:empty::after {
  content: "...";
}

.wiertla-categories__table tr:not(:last-child) td {
  border-bottom: 1px solid #E2E2E7;
}

.wiertla-categories__table td img {
  vertical-align: middle;
  max-height: 24px;
  margin: auto 0;
}

.wiertla-categories__table th {
  height: 34px;
  line-height: 34px;
  padding: 10px 17px;
  vertical-align: middle;
  position: relative;
  text-align: left;
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 100%;
  letter-spacing: 6%;
  color: #112832;
  background-color: white;
  border-bottom: 2px solid #E2E2E7;
  border-right: 2px solid #E2E2E7;
}

.wiertla-categories__table th:first-child {
  border-top-left-radius: 15px;
  border-left: 2px solid #E2E2E7;
}

.wiertla-categories__table th:last-child {
  border-top-right-radius: 15px;
  border-right: 2px solid #E2E2E7;
}

.wiertla-categories__table th {
  border-top: 2px solid #E2E2E7;
}

.wiertla-categories__table td:first-child {
  border-left: 2px solid #E2E2E7;
}

.wiertla-categories__table td:last-child {
  border-right: 2px solid #E2E2E7;
}

.wiertla-categories__table tr:last-child td {
  border-bottom: 2px solid #E2E2E7;
}

/* Hide the last column (info icon) */
.wiertla-categories__table th:nth-child(7),
.wiertla-categories__table td:nth-child(7) {
  display: none;
}

/* Add arrow to Cena netto column */
.wiertla-categories__table th:nth-last-child(2)::after {
  content: "";
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid #112832;
}

/* Hover preview styles */
.wiertla-categories__hover-preview {
  position: fixed;
  width: 425px;
  height: 303.5714px;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 9999;
  background-color: transparent;
}

.wiertla-categories__hover-preview.active {
  opacity: 1;
}

.wiertla-categories__hover-preview-inner {
  position: relative;
  width: 100%;
  height: 100%;
}

.wiertla-categories__hover-preview-img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border: 2px solid #E2E2E7;
  border-bottom-left-radius: 30px;
  background-color: #ffffff;
}

.wiertla-categories__hover-preview-arrow {
  position: absolute;
  right: -10px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #E2E2E7;
  border-bottom: 10px solid transparent;
}

/* Preview component styles - keep this area static */
.wiertla-categories__preview {
  width: 100%;
  padding: 20px;
  border: 2px dashed #E2E2E7;
  margin-top: 20px;
}

.wiertla-categories__preview-image img {
  pointer-events: none;
}

/* Icon styles */
.wiertla-categories__icons {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  margin-bottom: 30px;
  justify-content: center;
  width: 100%;
}

.wiertla-categories__icon-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 205.7143px;
  height: 203px;
  padding: 20px 15px;
  gap: 15px;
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 10px;
  box-sizing: border-box;
}

.wiertla-categories__icon-item:hover {
  background-color: #F5F5F8;
}

.wiertla-categories__icon {
  object-fit: cover;
}

.wiertla-categories__icon-label {
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 100%;
  letter-spacing: 6%;
  color: #112832;
  text-align: center;
  text-transform: uppercase;
  text-decoration: underline;
  text-decoration-style: solid;
  text-decoration-offset: 0%;
  text-decoration-thickness: 0%;
}

/* Filter styles */
.wiertla-categories__filters {
  display: flex;
  justify-content: space-between;
  margin-bottom: 30px;
  flex-wrap: wrap;
  gap: 20px;
  padding: 15px 15px 5px;
  background: #fff;
      border-radius: 20px 20px 0 0;
}

.wiertla-categories__filters-left {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: center;
}

.wiertla-categories__filters-right {
  display: flex;
  align-items: center;
  gap: 10px;
}

.wiertla-categories__filter {
  height: 40px;
  border: 2px solid #E2E2E7;
  border-radius: 30px;
  padding: 0 20px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 14px;
  line-height: 14px;
  color: #112832;
  background: #FFFFFF;
  cursor: pointer;
}

.wiertla-categories__filter-button {
  height: 40px;
  padding: 0 20px;
  border: 2px solid #E2E2E7;
  border-radius: 30px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 14px;
  line-height: 14px;
  color: #112832;
  background: #FFFFFF;
  cursor: pointer;
  transition: all 0.3s ease;
}

.wiertla-categories__filter-button.active {
  background: #112832;
  color: #F5F5F8;
  border-color: #112832;
}

.wiertla-categories__per-page-label {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 14px;
  line-height: 14px;
  color: #445D68;
}

.wiertla-categories__per-page-buttons {
  display: flex;
  gap: 5px;
}

.wiertla-categories__per-page-button {
  height: 42px;
  padding: 10px 22px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid #E2E2E7;
  border-radius: 30px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  font-size: 14px;
  line-height: 14px;
  color: #112832;
  background: #FFFFFF;
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 67px;
}

.wiertla-categories__per-page-button.active {
  background: #112832;
  color: #F5F5F8;
  border-color: #112832;
}

.wiertla-categories__per-page-buttons {
  display: flex;
  gap: 10px;
}

/* Search input styles */
.wiertla-categories__search .wiertla-search__input {
  width: 100%;
  height: 50px;
  border: 2px solid #E2E2E7;
  border-radius: 30px;
  padding: 11px 50px 11px 50px;
  font-family: "Montserrat";
  font-weight: 500;
  font-size: 18px;
  line-height: 100%;
  letter-spacing: 0.03em;
  color: #112832;
  background-color: white;
}

.wiertla-categories__search .wiertla-search__input::placeholder {
  color: #445D68;
}

/* Search icon positioned correctly */
.wiertla-categories__search .wiertla-search__input-group {
  position: relative;
  border: none;
}

.wiertla-categories__search .wiertla-search__submit {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  padding: 0;
}

.wiertla-categories__search .wiertla-search__submit svg {
  width: 24px;
  height: 24px;
  color: #112832;
}

.wiertla-categories__search .wiertla-search__icon-left {
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
}

/* Fullscreen button style */
.wiertla-categories__fullscreen-btn {
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;
  height: 50px;
  padding: 11px 17px;
  margin-bottom: 20px;
  background: #FFE500;
  border: 2px solid #112832;
  border-radius: 30px;
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 16.6px;
  letter-spacing: 0.06em;
  color: #112832;
  cursor: pointer;
  transition: all 0.3s ease;
}

.wiertla-categories__fullscreen-btn:hover {
  background: #FFD500;
}

.wiertla-categories__fullscreen-icon {
  width: 24px;
  height: 24px;
}

/* Preview component styles */
.wiertla-categories__preview-title {
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 16.6px;
  letter-spacing: 6%;
  text-transform: uppercase;
  color: #000000;
  margin-bottom: 20px;
}

.wiertla-categories__preview-image {
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.wiertla-categories__preview-img {
  max-width: 100%;
  height: auto;
}

.wiertla-categories__preview-text {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 16px;
  line-height: 22px;
  letter-spacing: 3%;
  color: #445D68;
}

/* Results styles */
.wiertla-categories__results {
  margin-top: 20px;
}

.wiertla-categories__results-count {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 14px;
  line-height: 14px;
  color: #445D68;
}

/* Pagination button styles - improved to display text on one line */
.wiertla-categories__pagination-button {
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 16.6px;
  letter-spacing: 6%;
  text-transform: uppercase;
  white-space: nowrap;
  padding: 0 22px;
  height: 50px;
  min-width: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #112832;
  color: #F5F5F8;
  border: none;
  border-radius: 40px;
  cursor: pointer;
}

.wiertla-categories__pagination-button[disabled] {
  background: #E2E2E7;
  color: #445D68;
  cursor: not-allowed;
}

/* Override button text with CSS using data-text attribute */
.wiertla-categories__pagination-button#prevPage::before,
.wiertla-categories__pagination-button#fullscreenPrevPage::before {
  content: attr(data-text);
}

.wiertla-categories__pagination-button#nextPage::before,
.wiertla-categories__pagination-button#fullscreenNextPage::before {
  content: attr(data-text);
}

.wiertla-categories__pagination-button span {
  display: none;
}

/* Improved pagination text alignment */
.wiertla-categories__simple-pagination {
  display: flex;
  align-items: center;
  gap: 20px;
}

.wiertla-categories__results-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* Fullscreen mode styles */
.wiertla-categories__fullscreen-mode {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #FFFFFF;
  z-index: 1000;
  padding: 40px;
  overflow-y: auto;
}

.wiertla-categories__fullscreen-mode.active {
  display: block;
}

.wiertla-categories__fullscreen-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
}

.wiertla-categories__fullscreen-title h2 {
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 16.6px;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  color: #112832;
  margin-bottom: 10px;
}

.wiertla-categories__fullscreen-title p {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
  font-size: 16px;
  line-height: 22px;
  letter-spacing: 0.03em;
  color: #112832;
  max-width: 510px;
}

.wiertla-categories__fullscreen-close {
  display: flex;
  align-items: center;
  gap: 10px;
  height: 50px;
  padding: 11px 17px;
  background: #FFE500;
  border: 2px solid #112832;
  border-radius: 30px;
  font-family: 'League Spartan', sans-serif;
  font-weight: 700;
  font-size: 18px;
  line-height: 16.6px;
  letter-spacing: 0.06em;
  color: #112832;
  cursor: pointer;
  transition: all 0.3s ease;
}

.wiertla-categories__fullscreen-close:hover {
  background: #FFD500;
}

.wiertla-categories__fullscreen-content {
  max-width: 100%;
  padding: 0;
  box-sizing: border-box;
}

.wiertla-categories__fullscreen-container {
  padding: 0 40px 40px;
}

.wiertla-categories__fullscreen-layout {
  display: flex;
  gap: 40px;
  margin: 0 40px;
  max-width: 100%;
}

/* Fullscreen column styles */
.wiertla-categories__fullscreen-left {
  width: 425px;
  flex-shrink: 0;
}

.wiertla-categories__fullscreen-right {
  flex: 1;
  padding-bottom: 40px;
}

/* Fullscreen pagination positioning fix */
.wiertla-categories__fullscreen-mode .wiertla-categories__results {
  margin-bottom: 40px;
  margin-right: 40px;
  margin-left: 40px;
}

/* Responsive styles */
@media (max-width: 1024px) {
  .wiertla-categories__layout {
    flex-direction: column;
  }
  
  .wiertla-categories__left-column,
  .wiertla-categories__right-column {
    width: 100%;
  }
}

@media (max-width: 768px) {
  /* Hide desktop elements on mobile */
  .wiertla-categories__icons:not(.mobile) {
    display: none;
  }

  /* Show mobile elements */
  .wiertla-categories__mobile-icons,
  .wiertla-categories__mobile-nav,
  .wiertla-categories__mobile-controls,
  .wiertla-categories__scroll-container,
  .wiertla-categories__scroll-indicator,
  .wiertla-categories__mobile-filter-btn,
  .wiertla-categories__mobile-sort-btn,
  .wiertla-categories__mobile-per-page {
    display: flex !important;
  }
  
  .wiertla-categories__mobile-filter-modal,
  .wiertla-categories__mobile-rent-modal {
    display: none;
  }
  
  .wiertla-categories__mobile-filter-modal.active,
  .wiertla-categories__mobile-rent-modal.active {
    display: block;
  }
  
  .wiertla-categories__mobile-icons {
    display: flex;
    overflow-x: auto;
    gap: 15px;
    margin-bottom: 20px;
    padding-bottom: 10px;
  }
  
  .wiertla-categories__filters {
    flex-direction: column;
  }
  
  .wiertla-categories__filters-left,
  .wiertla-categories__filters-right {
    width: 100%;
  }
}

/* Table preview styles */
.wiertla-categories__table-preview {
  display: none;
}

@media (max-width: 1024px) {
  .wiertla-categories__table-preview {
    width: 100%;
    padding: 20px;
    border: 2px dashed #E2E2E7;
    margin-top: 20px;
    display: block;
  }
  
  .wiertla-categories__table-preview .wiertla-categories__preview-image {
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .wiertla-categories__table-preview .wiertla-categories__preview-img {
    max-width: 100%;
    height: auto;
    object-fit: contain;
  }
}

/* Remove right border from last visible cell in each row */

/* Filters background */
.wiertla-categories__filters-background {
  width: 100%;
  background: #F5F5F8;
  padding: 20px 0 0;
}

.wiertla-categories__filters-container {
  max-width: 1440px;
  width: 100%;
  margin: 0 auto;
  padding: 0 20px;
}

.wiertla-categories__content {
  max-width: 1440px;
  width: 100%;
  margin: 0 auto;
  background: white;
  padding: 20px 20px;
  border-radius: 15px;
}
{% endstyle %}

{% assign drill_stats_nav = sections['drill-stats-nav'] %}
{% render 'drill-stats-nav' %}

{% endpaginate %}

{% schema %}
{
  "name": "Wiertla Categories",
  "settings": [
    {
      "type": "collection",
      "id": "selected_collection",
      "label": "Select Collection to Display",
      "info": "Choose which collection's products to display in this section"
    },
    {
      "type": "range",
      "id": "items_per_page",
      "label": "Products per page",
      "default": 20,
      "min": 10,
      "max": 1000,
      "step": 10
    }
  ],
  "presets": [
    {
      "name": "Wiertla Categories",
      "category": "Custom Components"
    }
  ]
}
{% endschema %}